import { BaseChain, ChainId, TokenInfoFormatted } from "../types";
import { BigNumber } from 'bignumber.js';
import Web3 from "web3";
import { Contract } from 'web3-eth-contract';
export declare const amount2Decimal: (amount: BigNumber, token: TokenInfoFormatted) => number;
export declare const decimal2Amount: (amountDecimal: number, token: TokenInfoFormatted) => BigNumber;
export declare const getErc20TokenContract: (address: string, web3: Web3) => Contract;
export declare const getContract: (abi: any, address: string, web3: Web3) => Contract;
export declare const fetchToken: (tokenAddr: string, chain: BaseChain, web3: Web3) => Promise<TokenInfoFormatted>;
export declare const getSwapTokenAddress: (token: TokenInfoFormatted) => string;
export declare const isGasToken: (token: TokenInfoFormatted, chainId: ChainId) => boolean;
export declare const isGasOrWrappedGasToken: (token: TokenInfoFormatted, chainId: ChainId) => boolean;
export declare const isWrappedGasToken: (token: TokenInfoFormatted, chainId: ChainId) => boolean;
export declare const getGasToken: (chainId: ChainId) => TokenInfoFormatted;
export declare const getWrappedGasTokenIfExists: (chainId: ChainId) => TokenInfoFormatted;

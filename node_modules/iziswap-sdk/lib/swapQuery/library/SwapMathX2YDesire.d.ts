import JSBI from 'jsbi';
import { SwapQuery } from './State';
export declare namespace SwapMathX2YDesire {
    interface RangeRetState {
        finished: boolean;
        costX: JSBI;
        acquireY: JSBI;
        finalPt: number;
        sqrtFinalPrice_96: JSBI;
        liquidityX: JSBI;
    }
    function x2YAtPrice(desireY: JSBI, sqrtPrice_96: JSBI, currY: JSBI): {
        costX: JSBI;
        acquireY: JSBI;
    };
    function x2YAtPriceLiquidity(desireY: JSBI, sqrtPrice_96: JSBI, liquidity: JSBI, liquidityX: JSBI): {
        costX: JSBI;
        acquireY: JSBI;
        newLiquidityX: JSBI;
    };
    function x2YRange(currentState: SwapQuery.State, leftPt: number, sqrtRate_96: JSBI, originDesireY: JSBI): RangeRetState;
}

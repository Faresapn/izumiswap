import JSBI from 'jsbi';
export declare abstract class LogPowMath {
    /**
     * Cannot be constructed.
     */
    private constructor();
    /**
     * The minimum point that can be used on any pool.
     */
    static MIN_POINT: number;
    /**
     * The maximum point that can be used on any pool.
     */
    static MAX_POINT: number;
    /**
     * The sqrt ratio corresponding to the minimum point that could be used on any pool.
     */
    static MIN_SQRT_RATIO: JSBI;
    /**
     * The sqrt ratio corresponding to the maximum point that could be used on any pool.
     */
    static MAX_SQRT_RATIO: JSBI;
    /**
     * Returns the sqrt ratio as a Q64.96 for the given point. The sqrt ratio is computed as sqrt(1.0001)^point
     * @param point the point for which to compute the sqrt ratio
     */
    static getSqrtPrice(point: number): JSBI;
    /**
     * Returns the point corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(point) <= sqrtRatioX96
     * and #getSqrtRatioAtTick(point + 1) > sqrtRatioX96
     * @param sqrtRatioX96 the sqrt ratio as a Q64.96 for which to compute the point
     */
    static getLogSqrtPriceFloor(sqrtRatioX96: JSBI): number;
    static getLogSqrtPriceFU(sqrtRatioX96: JSBI): {
        logFloor: number;
        logUpper: number;
    };
}

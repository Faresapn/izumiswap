import { TokenInfoFormatted } from "../base/types";
import { State } from "../pool/types";
export interface Liquidity {
    tokenId: string;
    leftPoint: number;
    rightPoint: number;
    liquidity: string;
    lastFeeScaleX_128: string;
    lastFeeScaleY_128: string;
    remainTokenX: string;
    remainTokenY: string;
    amountX: string;
    amountY: string;
    poolId: string;
    poolAddress: string;
    tokenX: TokenInfoFormatted;
    tokenY: TokenInfoFormatted;
    fee: number;
    state: State;
}
export interface MintParam {
    recipient?: string;
    tokenA: TokenInfoFormatted;
    tokenB: TokenInfoFormatted;
    fee: number;
    leftPoint: number;
    rightPoint: number;
    maxAmountA: string;
    maxAmountB: string;
    minAmountA: string;
    minAmountB: string;
    deadline?: string;
    strictERC20Token?: boolean;
}
export interface AddLiquidityParam {
    tokenId: string;
    tokenA: TokenInfoFormatted;
    tokenB: TokenInfoFormatted;
    maxAmountA: string;
    maxAmountB: string;
    minAmountA: string;
    minAmountB: string;
    deadline?: string;
    strictERC20Token?: boolean;
}
export interface DecLiquidityParam {
    tokenId: string;
    liquidDelta: string;
    minAmountX: string;
    minAmountY: string;
    deadline?: string;
}
export interface CollectLiquidityParam {
    tokenId: string;
    tokenA: TokenInfoFormatted;
    tokenB: TokenInfoFormatted;
    maxAmountA: string;
    maxAmountB: string;
    strictERC20Token?: boolean;
    recipient?: string;
}

import Web3 from "web3";
import { TokenInfoFormatted } from "../base";
import { DagNode, PoolPair, PreQueryResult } from "./types";
export declare class SwapPreQueryPlugin {
    private preQueryResult;
    private web3;
    private chainId;
    private liquidityManagerContract;
    private liquidityManagerAddress;
    private fakePoolContract;
    private poolBlackSet;
    private midTokenList;
    private supportFeeContractNumbers;
    private support001PoolSet;
    private pairsOfCalling;
    private knownPairs;
    private knownPoolAddress;
    private knownPoolPoint;
    private unknownPoolPoint;
    private allLinks;
    private dagNodes;
    private responsePoolAddress;
    private tokenA;
    private tokenB;
    constructor(preQueryResult: PreQueryResult, liquidityManagerAddress: string, chainId: number, web3: Web3);
    setPoolBlackList(poolBlackList: PoolPair[]): void;
    setMidTokenList(midTokenList: TokenInfoFormatted[]): void;
    setSupportFeeContractNumbers(supportFeeContractNumbers: number[]): void;
    setSupport001Pools(support001Pools: PoolPair[]): void;
    private getSwapPoolKey;
    private getSwapPoolKeySymbol;
    private hasPool;
    private blackPool;
    getPreQueryDag(tokenA: TokenInfoFormatted, tokenB: TokenInfoFormatted): DagNode[];
    getQueryResult(): PreQueryResult;
}

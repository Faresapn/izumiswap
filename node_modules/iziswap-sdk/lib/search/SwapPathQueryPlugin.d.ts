import Web3 from "web3";
import { TokenInfoFormatted } from "../base";
import { Path, PathQuery, PathQueryResult, PreQueryResult, SwapDirection } from "./types";
export declare class SwapPathQueryPlugin {
    private preQueryResult;
    private chainId;
    private quoterContract;
    private quoterContractAddress;
    private direction;
    private tokenIn;
    private web3;
    constructor(preQueryResult: PreQueryResult, chainId: number, quoterAddress: string, web3: Web3);
    private num2Hex;
    private fee2Hex;
    private appendHex;
    private getTokenChainPath;
    private getTokenChainPathReverse;
    private reverse;
    getPathQuery(tokenIn: TokenInfoFormatted, tokenOut: TokenInfoFormatted, direction: SwapDirection, amount: string): PathQuery[];
    private noSufficientLiquidity;
    private estimateFee;
    private getSwapPoolKey;
    private getOriginPointList;
    private getPriceDecimalEndByStart;
    parseCallingResponse(path: Path, direction: SwapDirection, amount: string, result: string): PathQueryResult;
}
